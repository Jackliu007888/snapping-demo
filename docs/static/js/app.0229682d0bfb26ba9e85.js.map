{"version":3,"sources":["webpack:///./src/common.js","webpack:///./src/utils.js","webpack:///./src/components/resize-handler.js","webpack:///./src/components/svg-canvas.js","webpack:///./src/app.js","webpack:///./src/main.js"],"names":["degreeToRadian","degree","Math","PI","common","rect","correctX","arguments","length","undefined","correctY","x","width","y","height","points","SVGElement","e","point","createSVGPoint","clientX","clientY","position","matrixTransform","getScreenCTM","inverse","center","rotate","cos","sin","num","scaling","toFixed","throttle","fn","delay","immediate","debounce","curr","Date","last_call","last_exec","timer","diff","context","args","exec","apply","this","clearTimeout","setTimeout","utils","resetSize","getCenterPoint","p1","p2","pointInRect","p0","getKeyVariable","handler","viewportRef","getViewportRef","current","handlePoint","resize_handler_getPoint","sPoint","abs","proportion","workspace","lockProportions","handleMethods","dragElement","_this","draged","mouseDownPosition","originPosition","size","mousemoveHandler","currentPosition","assign_default","$emit","id","window","addEventListener","mouseupHandler","ev","correctedSize","removeEventListener","dragRotateHandle","_this2","originCenter","a","b","c","sqrt","round","asin","parseInt","dragTopLeftHandle","_this3","_getKeyVariable$call","call","newCenterPoint","newTopLeftPoint","newBottomRightPoint","newWidth","newHeight","rotatedTopLeftPoint","dragTopMiddleHandle","_this4","_getKeyVariable$call2","rotatedCurrentPosition","rotatedTopMiddlePoint","pow","newCenter","dragTopRightHandle","_this5","_getKeyVariable$call3","newTopRightPoint","newBottomLeftPoint","rotatedTopRightPoint","dragBottomLeftHandle","_this6","_getKeyVariable$call4","rotatedBottomLeftPoint","dragBottomMiddleHandle","_this7","_getKeyVariable$call5","rotatedBottomMiddlePoint","dragBottomRightHandle","_this8","_getKeyVariable$call6","rotatedBottomRightPoint","dragMiddleLeftHandle","_this9","_getKeyVariable$call7","rotatedLeftMiddlePoint","dragMiddleRightHandle","_this10","_getKeyVariable$call8","rotatedRightMiddlePoint","resize_handler","name","props","String","type","Object","default","corrected","Function","Number","selected","Boolean","data","staticValue","negativeThirty","four","two","computed","watch","oldVal","deep","render","h","viewBox","attrs","transform","fill","stroke","stroke-width","style","on","mousedown","x1","x2","y1","y2","stroke-dasharray","class","cx","cy","r","title","methods","extends_default","RectList","svg_canvas","ID_TEMPLATE","shapeList","map","i","dragingShapeId","measuringLine","referenceShape","ref","shape","key","changing","handleChangingShape","changed","handleChangedShape","$refs","svg","shapeId","currentSize","handlerPosition","mousePosition","dragingShapePoints","measuringLineX","measuringLineY","closestX","distance","Infinity","pointIndex","correct","closestY","getClosestXFunc","shapePoints","getClosestYFunc","forEach","pointXDiff","pointYDiff","getClosestX","getClosestY","some","resetCorrectedValue","app","vue_esm","config","productionTip","mixin","el"],"mappings":"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","file":"static/js/app.0229682d0bfb26ba9e85.js","sourcesContent":["const sizeToPoints = (rect, correctX = 0, correctY = 0) => {\n  const xMin = rect.x + correctX\n  const xMid = rect.x + rect.width / 2 + correctX\n  const xMax = rect.x + rect.width + correctX\n  const yMin = rect.y + correctY\n  const yMid = rect.y + rect.height / 2 + correctY\n  const yMax = rect.y + rect.height + correctY\n\n  return [\n    [xMin, xMid, xMax],\n    [yMin, yMid, yMax]\n  ]\n}\n\nconst pointsToSize = points => ({\n  x: points[0][0],\n  y: points[1][0],\n  width: points[0][2] - points[0][0],\n  height: points[1][2] - points[1][0],\n})\n\n/**\n * 获取鼠标位置在svg元素中的坐标\n * @param   {SVGElement}  SVGElement  SVG元素\n * @param   {Event}       e           Event\n * @return  {Object}                  鼠标指针在SVG中的坐标（xy结构）\n */\nconst getPositionInSvg = (SVGElement, e) => {\n  const point = SVGElement.createSVGPoint()\n\n  point.x = e.clientX\n  point.y = e.clientY\n\n  const position = point.matrixTransform(SVGElement.getScreenCTM().inverse())\n\n  return {\n    x: position.x,\n    y: position.y,\n  }\n}\n\n/**\n * 角度转弧度(通常用于js的计算正弦余弦的方法)\n * @param   {Number}  degree  角度\n * @return  {Number}          弧度\n */\nconst degreeToRadian = degree => 2 * Math.PI / 360 * degree\n\n/**\n * 计算根据圆心旋转后的点的坐标\n * @param   {Object}  point   旋转前的点坐标\n * @param   {Object}  center  旋转中心\n * @param   {Int}     rotate  旋转的角度\n * @return  {Object}          旋转后的坐标\n */\nconst getRotatedPoint = (point, center, rotate) => {\n  /**\n   * 旋转公式：\n   *  点a(x, y)\n   *  旋转中心c(x, y)\n   *  旋转后点n(x, y)\n   *  旋转角度θ\n   * nx = cosθ * (ax - cx) - sinθ * (ay - cy) + cx\n   * ny = sinθ * (ax - cx) + cosθ * (ay - cy) + cy\n   */\n  return {\n    x: (point.x - center.x) * Math.cos(degreeToRadian(rotate)) - (point.y - center.y) * Math.sin(degreeToRadian(rotate)) + center.x,\n    y: (point.x - center.x) * Math.sin(degreeToRadian(rotate)) + (point.y - center.y) * Math.cos(degreeToRadian(rotate)) + center.y\n  }\n}\n\nconst absoluteZoom = (num, scaling) => (num / scaling * 100).toFixed(2)\n\nexport default {\n  sizeToPoints,\n  pointsToSize,\n  getPositionInSvg,\n  degreeToRadian,\n  getRotatedPoint,\n  absoluteZoom\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","const deepClone = target => {\n  if (target && typeof target === 'object') {\n    const newObj = target instanceof Array ? [] : {}\n    for (let key in target) {\n      const val = target[key]\n      newObj[key] = deepClone(val)\n    }\n    return newObj\n  }\n\n  return target\n}\n\nconst dateFormat = (date, format = 'yyyy-MM-dd') => {\n  let o = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds()\n  }\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n\n  for (let k in o) {\n    if (new RegExp('(' + k + ')').test(format)) {\n      format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length))\n    }\n  }\n  return format\n}\n\nconst bubbleSort = (arr, keyName) => {\n  let len = arr.length\n\n  const compare = keyName === undefined ? (i, j) => i > j : (i, j) => i[keyName] > j[keyName]\n\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      if (compare(arr[j], arr[j + 1])) { // 相邻元素两两对比\n        let temp = arr[j + 1] // 元素交换\n        arr[j + 1] = arr[j]\n        arr[j] = temp\n      }\n    }\n  }\n\n  return arr\n}\n\n/**\n * 函数节流 返回函数连续调用时，fn 执行频率限定为每多少时间执行一次\n * @param fn         {function}  需要调用的函数\n * @param delay      {number}    延迟时间，单位毫秒\n * @param immediate  {bool}      给 immediate 参数传递 false，绑定的函数先执行，而不是delay后后执行\n * @return           {function}  实际调用函数\n */\nlet throttle = function(fn, delay, immediate = false, debounce = false) {\n  let curr = +new Date()\n  let last_call = 0\n  let last_exec = 0\n  let timer = null\n  let diff\n  let context\n  let args\n  const exec = function() {\n    last_exec = curr\n    fn.apply(context, args)\n  }\n\n  return function() {\n    curr = +new Date()\n    context = this\n    args = arguments\n    diff = curr - (debounce ? last_call : last_exec) - delay\n\n    clearTimeout(timer)\n\n    if (debounce) {\n      if (immediate) {\n        timer = setTimeout(exec, delay)\n      } else if (diff >= 0) {\n        exec()\n      }\n    } else {\n      if (diff >= 0) {\n        exec()\n      } else if (immediate) {\n        timer = setTimeout(exec, -diff)\n      }\n    }\n\n    last_call = curr\n  }\n}\n\n/**\n * 函数去抖 返回函数连续调用时，空闲时间必须大于或等于 delay，fn 才会执行\n * @param fn         {function}  需要调用的函数\n * @param delay      {number}    空闲时间，单位毫秒\n * @param immediate  {bool}      给 immediate 参数传递 false，绑定的函数先执行，而不是delay后后执行\n * @return           {function}  实际调用函数\n */\nconst debounce = function(fn, delay, immediate = false) {\n  return throttle(fn, delay, immediate, true)\n}\n\nconst delayExec = function(fn, delay) {\n  let timer = null\n  let context\n\n  return function(...args) {\n    context = this\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    timer = setTimeout(() => {\n      fn.apply(context, args)\n      timer = null\n    }, delay)\n  }\n}\n\nexport {\n  dateFormat,\n  bubbleSort,\n  throttle,\n  debounce,\n  deepClone,\n  delayExec\n}\n\nexport default {\n  dateFormat,\n  bubbleSort,\n  throttle,\n  debounce,\n  deepClone,\n  delayExec\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","import Common from '@/common'\nimport Utils from '@/utils'\n\nconst THROTTLE_DELAY_TIME = 30\nconst MINIMUM_SIZE = 4\n\nconst resetSize = () => ({\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  rotate: 0\n})\n\n/**\n * 获取旋转后的手柄坐标\n * @param  {Object} rect     形状的宽高坐标\n * @param  {Object} center   旋转中心的坐标\n * @param  {String} position 手柄名称\n * @return {Object}          旋转后的手柄坐标\n */\nconst getPoint = (rect, center, position) => {\n  let point\n\n  switch(position) {\n  case 'top-left':\n    point = {\n      x: rect.x,\n      y: rect.y\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'top-middle':\n    point = {\n      x: rect.x + (rect.width / 2),\n      y: rect.y\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'top-right':\n    point = {\n      x: rect.x + rect.width,\n      y: rect.y\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'bottom-left':\n    point = {\n      x: rect.x,\n      y: rect.y + rect.height\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'bottom-middle':\n    point = {\n      x: rect.x + (rect.width / 2),\n      y: rect.y + rect.height\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'bottom-right':\n    point = {\n      x: rect.x + rect.width,\n      y: rect.y + rect.height\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'middle-left':\n    point = {\n      x: rect.x,\n      y: rect.y + (rect.height / 2)\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  case 'middle-right':\n    point = {\n      x: rect.x + rect.width,\n      y: rect.y + (rect.height / 2)\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  default:\n    point = {\n      x: rect.x,\n      y: rect.y\n    }\n    return Common.getRotatedPoint(point, center, rect.rotate)\n  }\n}\n\n/**\n * 获取两点之间连线后的中点坐标\n * @param  {Object} p1 点1的坐标\n * @param  {Object} p2 点2的坐标\n * @return {Object}    中点坐标\n */\nconst getCenterPoint = (p1, p2) => ({\n  x: p1.x + ((p2.x - p1.x) / 2),\n  y: p1.y + ((p2.y - p1.y) / 2)\n})\n\n/**\n * 检测 p0 是否在 p1 与 p2 建立的矩形内\n * @param  {Object}  p0 被检测的坐标\n * @param  {Object}  p1 点1坐标\n * @param  {Object}  p2 点2坐标\n * @return {Boolean}    检测结果\n */\nconst pointInRect = (p0, p1, p2) => {\n  if (p1.x > p2.x) {\n    if (p0.x < p2.x) {\n      return false\n    }\n  } else {\n    if (p0.x > p2.x) {\n      return false\n    }\n  }\n\n  if (p1.y > p2.y) {\n    if (p0.y < p2.y) {\n      return false\n    }\n  } else {\n    if (p0.y > p2.y) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * 获取关键变量（计算尺寸调整逻辑用）\n * @param  {String} handler 手柄名称\n * @return {Object}         关键变量集合\n */\nconst getKeyVariable = function(handler) {\n  const viewportRef = this.getViewportRef()\n  const rect = {\n    x: this.current.x,\n    y: this.current.y,\n    width: this.current.width,\n    height: this.current.height,\n    rotate: this.current.rotate\n  }\n  const center = {\n    x: rect.x + (rect.width / 2),\n    y: rect.y + (rect.height / 2)\n  }\n  const handlePoint = getPoint(rect, center, handler)\n  const sPoint = {\n    x: center.x + Math.abs(handlePoint.x - center.x) * (handlePoint.x < center.x ? 1 : -1),\n    y: center.y + Math.abs(handlePoint.y - center.y) * (handlePoint.y < center.y ? 1 : -1)\n  }\n  const proportion = this.workspace.lockProportions ? (rect.width / rect.height) : 1\n\n  return {\n    viewportRef,  // 页面SVG元素的引用（计算鼠标位置需要用到）\n    rect,         // 元素原始几何信息（xy宽高）\n    center,       // 元素原始中心点坐标\n    handlePoint,  // 当前拖动手柄的虚拟坐标（旋转后的坐标）\n    sPoint,       // 拖动手柄的对称点的坐标（假设拖动的是左上角手柄，那么他的对称点就是右下角的点）\n    proportion    // 宽高比\n  }\n}\n\nconst handleMethods = {\n  dragElement(e) {\n    let draged = false\n    const viewportRef = this.getViewportRef()\n    const mouseDownPosition = Common.getPositionInSvg(viewportRef, e)\n    const originPosition = {\n      x: this.size.x,\n      y: this.size.y\n    }\n\n    const dragMoveHandler = e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      Object.assign(this.current, {\n        x: originPosition.x + currentPosition.x - mouseDownPosition.x,\n        y: originPosition.y + currentPosition.y - mouseDownPosition.y,\n      })\n\n      this.$emit('changing', this.id, 'move', this.current)\n    }\n\n    const mousemoveHandler = Utils.throttle(dragMoveHandler, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragRotateHandle(e) {\n    let draged = false\n    const viewportRef = this.getViewportRef()\n    const rect = {\n      x: this.current.x,\n      y: this.current.y,\n      width: this.current.width,\n      height: this.current.height,\n      rotate: this.current.rotate\n    }\n\n    const originCenter = {\n      x: rect.x + (rect.width / 2),\n      y: rect.y + (rect.height / 2)\n    }\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      const a = Math.abs(currentPosition.x - originCenter.x)\n      const b = Math.abs(currentPosition.y - originCenter.y)\n      const c = Math.sqrt(a * a + b * b)\n      let rotate = Math.round((Math.asin(b / c) / Math.PI * 180))\n\n      // 第一象限\n      if (currentPosition.x >= originCenter.x && currentPosition.y <= originCenter.y) {\n        rotate = 90 - rotate\n      }\n      // 第二象限\n      else if (currentPosition.x <= originCenter.x && currentPosition.y <= originCenter.y) {\n        rotate = 270 + rotate\n      }\n      // 第三象限\n      else if (currentPosition.x <= originCenter.x && currentPosition.y >= originCenter.y) {\n        rotate = 270 - rotate\n      }\n      // 第四象限\n      else if(currentPosition.x >= originCenter.x && currentPosition.y >= originCenter.y) {\n        rotate = 90 + rotate\n      }\n\n      this.current.rotate = rotate === 360 ? 0 : parseInt(rotate)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragTopLeftHandle(e) {\n    let draged = false\n    const { viewportRef, sPoint, rect, proportion } = getKeyVariable.call(this, 'top-left')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n\n      let currentPosition = Common.getPositionInSvg(viewportRef, e)\n      let newCenterPoint = getCenterPoint(currentPosition, sPoint)\n      let newTopLeftPoint = Common.getRotatedPoint(currentPosition, newCenterPoint, -rect.rotate)\n      let newBottomRightPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n      let newWidth = newBottomRightPoint.x - newTopLeftPoint.x\n      let newHeight = newBottomRightPoint.y - newTopLeftPoint.y\n\n      if (this.workspace.lockProportions) {\n        if (newWidth / newHeight > proportion) {\n          newTopLeftPoint.x = newTopLeftPoint.x + Math.abs(newWidth - newHeight * proportion)\n          newWidth = newHeight * proportion\n        } else {\n          newTopLeftPoint.y = newTopLeftPoint.y + Math.abs(newHeight - newWidth / proportion)\n          newHeight = newWidth / proportion\n        }\n\n        let rotatedTopLeftPoint = Common.getRotatedPoint(newTopLeftPoint, newCenterPoint, rect.rotate)\n        newCenterPoint = getCenterPoint(rotatedTopLeftPoint, sPoint)\n        newTopLeftPoint = Common.getRotatedPoint(rotatedTopLeftPoint, newCenterPoint, -rect.rotate)\n        newBottomRightPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n        newWidth = newBottomRightPoint.x - newTopLeftPoint.x\n        newHeight = newBottomRightPoint.y - newTopLeftPoint.y\n      }\n\n      if (newWidth < MINIMUM_SIZE || (newHeight < MINIMUM_SIZE)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        x: newTopLeftPoint.x,\n        y: newTopLeftPoint.y,\n        height: newHeight,\n        width: newWidth\n      })\n\n      this.$emit('changing', this.id, 'top-left', this.current, newTopLeftPoint)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragTopMiddleHandle(e) {\n    let draged = false\n    const { rect, viewportRef, sPoint, handlePoint } = getKeyVariable.call(this, 'top-middle')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      const rotatedCurrentPosition = Common.getRotatedPoint(currentPosition, handlePoint, -rect.rotate)\n      const rotatedTopMiddlePoint = Common.getRotatedPoint({\n        x: handlePoint.x,\n        y: rotatedCurrentPosition.y\n      }, handlePoint, rect.rotate)\n\n      const newHeight = Math.sqrt(Math.pow(rotatedTopMiddlePoint.x - sPoint.x, 2) + Math.pow(rotatedTopMiddlePoint.y - sPoint.y, 2), 2)\n      const newCenter = {\n        x: rotatedTopMiddlePoint.x - (Math.abs(sPoint.x - rotatedTopMiddlePoint.x) / 2) * (rotatedTopMiddlePoint.x > sPoint.x ? 1 : -1),\n        y: rotatedTopMiddlePoint.y + (Math.abs(sPoint.y - rotatedTopMiddlePoint.y) / 2) * (rotatedTopMiddlePoint.y > sPoint.y ? -1 : 1)\n      }\n\n      if (newHeight < MINIMUM_SIZE) {\n        return\n      }\n\n      if (!pointInRect(newCenter, handlePoint, sPoint)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        height: newHeight,\n        y: newCenter.y - (newHeight / 2),\n        x: newCenter.x - (rect.width / 2)\n      })\n\n      this.$emit('changing', this.id, 'top-middle', this.current, rotatedTopMiddlePoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragTopRightHandle(e) {\n    let draged = false\n    const { viewportRef, sPoint, rect, proportion } = getKeyVariable.call(this, 'top-right')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      let currentPosition = Common.getPositionInSvg(viewportRef, e)\n      let newCenterPoint = getCenterPoint(currentPosition, sPoint)\n\n      let newTopRightPoint = Common.getRotatedPoint(currentPosition, newCenterPoint, -rect.rotate)\n      let newBottomLeftPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n      let newWidth = newTopRightPoint.x - newBottomLeftPoint.x\n      let newHeight = newBottomLeftPoint.y - newTopRightPoint.y\n\n      if (this.workspace.lockProportions) {\n        if (newWidth / newHeight > proportion) {\n          newTopRightPoint.x = newTopRightPoint.x - Math.abs(newWidth - newHeight * proportion)\n          newWidth = newHeight * proportion\n        } else {\n          newTopRightPoint.y = newTopRightPoint.y + Math.abs(newHeight - newWidth / proportion)\n          newHeight = newWidth / proportion\n        }\n\n        let rotatedTopRightPoint = Common.getRotatedPoint(newTopRightPoint, newCenterPoint, rect.rotate)\n        newCenterPoint = getCenterPoint(rotatedTopRightPoint, sPoint)\n        newTopRightPoint = Common.getRotatedPoint(rotatedTopRightPoint, newCenterPoint, -rect.rotate)\n        newBottomLeftPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n        newWidth = newTopRightPoint.x - newBottomLeftPoint.x\n        newHeight = newBottomLeftPoint.y - newTopRightPoint.y\n      }\n\n      if (newWidth < MINIMUM_SIZE || (newHeight < MINIMUM_SIZE)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        x: newBottomLeftPoint.x,\n        y: newTopRightPoint.y,\n        height: newHeight,\n        width: newWidth\n      })\n\n      this.$emit('changing', this.id, 'top-right', this.current, newTopRightPoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragBottomLeftHandle(e) {\n    let draged = false\n    const { viewportRef, sPoint, rect, proportion } = getKeyVariable.call(this, 'bottom-left')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      let currentPosition = Common.getPositionInSvg(viewportRef, e)\n      let newCenterPoint = getCenterPoint(currentPosition, sPoint)\n\n      let newTopRightPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n      let newBottomLeftPoint = Common.getRotatedPoint(currentPosition, newCenterPoint, -rect.rotate)\n\n      let newWidth = newTopRightPoint.x - newBottomLeftPoint.x\n      let newHeight = newBottomLeftPoint.y - newTopRightPoint.y\n\n      if (this.workspace.lockProportions) {\n        if (newWidth / newHeight > proportion) {\n          newBottomLeftPoint.x = newBottomLeftPoint.x + Math.abs(newWidth - newHeight * proportion)\n          newWidth = newHeight * proportion\n        } else {\n          newBottomLeftPoint.y = newBottomLeftPoint.y - Math.abs(newHeight - newWidth / proportion)\n          newHeight = newWidth / proportion\n        }\n\n        let rotatedBottomLeftPoint = Common.getRotatedPoint(newBottomLeftPoint, newCenterPoint, rect.rotate)\n        newCenterPoint = getCenterPoint(rotatedBottomLeftPoint, sPoint)\n        newBottomLeftPoint = Common.getRotatedPoint(rotatedBottomLeftPoint, newCenterPoint, -rect.rotate)\n        newTopRightPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n        newWidth = newTopRightPoint.x - newBottomLeftPoint.x\n        newHeight = newBottomLeftPoint.y - newTopRightPoint.y\n      }\n\n      if (newWidth < MINIMUM_SIZE || (newHeight < MINIMUM_SIZE)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        x: newBottomLeftPoint.x,\n        y: newTopRightPoint.y,\n        height: newHeight,\n        width: newWidth\n      })\n\n      this.$emit('changing', this.id, 'bottom-left', this.current, newBottomLeftPoint)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragBottomMiddleHandle(e) {\n    let draged = false\n    const { rect, viewportRef, sPoint, handlePoint } = getKeyVariable.call(this, 'bottom-middle')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      const rotatedCurrentPosition = Common.getRotatedPoint(currentPosition, handlePoint, -rect.rotate)\n      const rotatedBottomMiddlePoint = Common.getRotatedPoint({\n        x: handlePoint.x,\n        y: rotatedCurrentPosition.y\n      }, handlePoint, rect.rotate)\n\n      const newHeight = Math.sqrt(Math.pow(rotatedBottomMiddlePoint.x - sPoint.x, 2) + Math.pow(rotatedBottomMiddlePoint.y - sPoint.y, 2), 2)\n      const newCenter = {\n        x: rotatedBottomMiddlePoint.x - (Math.abs(sPoint.x - rotatedBottomMiddlePoint.x) / 2) * (rotatedBottomMiddlePoint.x > sPoint.x ? 1 : -1),\n        y: rotatedBottomMiddlePoint.y + (Math.abs(sPoint.y - rotatedBottomMiddlePoint.y) / 2) * (rotatedBottomMiddlePoint.y > sPoint.y ? -1 : 1)\n      }\n\n      if (newHeight < MINIMUM_SIZE) {\n        return\n      }\n\n      if (!pointInRect(newCenter, handlePoint, sPoint)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        height: newHeight,\n        y: newCenter.y - (newHeight / 2),\n        x: newCenter.x - (rect.width / 2)\n      })\n\n      this.$emit('changing', this.id, 'bottom-middle', this.current, rotatedBottomMiddlePoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragBottomRightHandle(e) {\n    let draged = false\n    const { viewportRef, sPoint, rect, proportion } = getKeyVariable.call(this, 'bottom-right')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      let currentPosition = Common.getPositionInSvg(viewportRef, e)\n      let newCenterPoint = getCenterPoint(currentPosition, sPoint)\n\n      let newTopLeftPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n      let newBottomRightPoint = Common.getRotatedPoint(currentPosition, newCenterPoint, -rect.rotate)\n\n      let newWidth = newBottomRightPoint.x - newTopLeftPoint.x\n      let newHeight = newBottomRightPoint.y - newTopLeftPoint.y\n\n      if (this.workspace.lockProportions) {\n        if (newWidth / newHeight > proportion) {\n          newBottomRightPoint.x = newBottomRightPoint.x - Math.abs(newWidth - newHeight * proportion)\n          newWidth = newHeight * proportion\n        } else {\n          newBottomRightPoint.y = newBottomRightPoint.y - Math.abs(newHeight - newWidth / proportion)\n          newHeight = newWidth / proportion\n        }\n\n        let rotatedBottomRightPoint = Common.getRotatedPoint(newBottomRightPoint, newCenterPoint, rect.rotate)\n        newCenterPoint = getCenterPoint(rotatedBottomRightPoint, sPoint)\n        newBottomRightPoint = Common.getRotatedPoint(rotatedBottomRightPoint, newCenterPoint, -rect.rotate)\n        newTopLeftPoint = Common.getRotatedPoint(sPoint, newCenterPoint, -rect.rotate)\n\n        newWidth = newBottomRightPoint.x - newTopLeftPoint.x\n        newHeight = newBottomRightPoint.y - newTopLeftPoint.y\n      }\n\n      if (newWidth < MINIMUM_SIZE || (newHeight < MINIMUM_SIZE)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        x: newTopLeftPoint.x,\n        y: newTopLeftPoint.y,\n        height: newHeight,\n        width: newWidth\n      })\n\n      this.$emit('changing', this.id, 'bottom-right', this.current, newBottomRightPoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragMiddleLeftHandle(e) {\n    let draged = false\n    const { rect, viewportRef, sPoint, handlePoint } = getKeyVariable.call(this, 'middle-left')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      const rotatedCurrentPosition = Common.getRotatedPoint(currentPosition, handlePoint, -rect.rotate)\n      const rotatedLeftMiddlePoint = Common.getRotatedPoint({\n        x: rotatedCurrentPosition.x,\n        y: handlePoint.y\n      }, handlePoint, rect.rotate)\n\n      const newWidth = Math.sqrt(Math.pow(rotatedLeftMiddlePoint.x - sPoint.x, 2) + Math.pow(rotatedLeftMiddlePoint.y - sPoint.y, 2), 2)\n      const newCenter = {\n        x: rotatedLeftMiddlePoint.x - (Math.abs(sPoint.x - rotatedLeftMiddlePoint.x) / 2) * (rotatedLeftMiddlePoint.x > sPoint.x ? 1 : -1),\n        y: rotatedLeftMiddlePoint.y + (Math.abs(sPoint.y - rotatedLeftMiddlePoint.y) / 2) * (rotatedLeftMiddlePoint.y > sPoint.y ? -1 : 1)\n      }\n\n      if (newWidth < MINIMUM_SIZE) {\n        return\n      }\n\n      if (!pointInRect(newCenter, handlePoint, sPoint)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        width: newWidth,\n        y: newCenter.y - (rect.height / 2),\n        x: newCenter.x - (newWidth / 2)\n      })\n\n      this.$emit('changing', this.id, 'middle-left', this.current, rotatedLeftMiddlePoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  },\n\n  dragMiddleRightHandle(e) {\n    let draged = false\n    const { rect, viewportRef, sPoint, handlePoint } = getKeyVariable.call(this, 'middle-right')\n\n    const mousemoveHandler = Utils.throttle(e => {\n      draged = true\n      const currentPosition = Common.getPositionInSvg(viewportRef, e)\n\n      const rotatedCurrentPosition = Common.getRotatedPoint(currentPosition, handlePoint, -rect.rotate)\n      const rotatedRightMiddlePoint = Common.getRotatedPoint({\n        x: rotatedCurrentPosition.x,\n        y: handlePoint.y\n      }, handlePoint, rect.rotate)\n\n      const newWidth = Math.sqrt(Math.pow(rotatedRightMiddlePoint.x - sPoint.x, 2) + Math.pow(rotatedRightMiddlePoint.y - sPoint.y, 2), 2)\n      const newCenter = {\n        x: rotatedRightMiddlePoint.x - (Math.abs(sPoint.x - rotatedRightMiddlePoint.x) / 2) * (rotatedRightMiddlePoint.x > sPoint.x ? 1 : -1),\n        y: rotatedRightMiddlePoint.y + (Math.abs(sPoint.y - rotatedRightMiddlePoint.y) / 2) * (rotatedRightMiddlePoint.y > sPoint.y ? -1 : 1)\n      }\n\n      if (newWidth < MINIMUM_SIZE) {\n        return\n      }\n\n      if (!pointInRect(newCenter, handlePoint, sPoint)) {\n        return\n      }\n\n      Object.assign(this.current, {\n        width: newWidth,\n        y: newCenter.y - (rect.height / 2),\n        x: newCenter.x - (newWidth / 2)\n      })\n\n      this.$emit('changing', this.id, 'middle-right', this.current, rotatedRightMiddlePoint, currentPosition)\n    }, THROTTLE_DELAY_TIME, true)\n\n    const mouseupHandler = ev => {\n      draged && this.$emit('changed', this.id, this.correctedSize)\n      window.removeEventListener('mousemove', mousemoveHandler)\n      window.removeEventListener('mouseup', mouseupHandler)\n    }\n\n    window.addEventListener('mousemove', mousemoveHandler)\n    window.addEventListener('mouseup', mouseupHandler)\n  }\n}\n\nconst ResizeHandler = {\n  name: 'resize-handler',\n  props: {\n    id: String,               // 编号\n    size: {                   // 定位、宽高\n      type: Object,\n      default: resetSize\n    },\n    corrected: {              // 修正值\n      type: Object,\n      default: resetSize\n    },\n    getViewportRef: Function, // 获取svg dom引用的方法\n    scaling: Number,          // 缩放比值，用于控制手柄图形的大小\n    selected: Boolean         // 选中态\n  },\n  data() {\n    return {\n      current: {\n        x: this.size.x,\n        y: this.size.y,\n        width: this.size.width,\n        height: this.size.height,\n        rotate: this.size.rotate\n      },\n      staticValue: {\n        negativeThirty: Common.absoluteZoom(-30, this.scaling),\n        four: Common.absoluteZoom(4, this.scaling),\n        two: Common.absoluteZoom(2, this.scaling)\n      }\n    }\n  },\n  computed: {\n    correctedSize() {\n      const correctedSize = {\n        x: this.current.x + this.corrected.x,\n        y: this.current.y + this.corrected.y,\n        width: this.current.width + this.corrected.width,\n        height: this.current.height + this.corrected.height,\n        rotate: this.current.rotate\n      }\n      \n\n      if (correctedSize.width < MINIMUM_SIZE || (correctedSize.height < MINIMUM_SIZE)) {\n        return {\n          x: this.current.x,\n          y: this.current.y,\n          width: this.current.width,\n          height: this.current.height,\n          rotate: this.current.rotate\n        }\n      }\n\n      return correctedSize\n    }\n  },\n  watch: {\n    size: {\n      handler(size, oldVal) {\n        this.current = size\n      },\n      deep: true\n    },\n    scaling(scaling) {\n      this.staticValue.negativeThirty = Common.absoluteZoom(-30, scaling)\n      this.staticValue.four = Common.absoluteZoom(4, scaling)\n    }\n  },\n  render(h) {\n    const current = this.correctedSize\n    const viewBox = `0 0 ${current.width} ${current.height}`\n\n    return (\n      <g transform={`rotate(${this.current.rotate},${this.current.x + this.current.width / 2},${this.current.y + this.current.height / 2})`}>\n        <rect\n          fill=\"none\"\n          stroke=\"#000\"\n          stroke-width=\"1\"\n          width={current.width}\n          height={current.height}\n          x={current.x}\n          y={current.y}\n        />\n        <svg\n          viewBox={viewBox}\n          width={current.width}\n          height={current.height}\n          x={current.x}\n          y={current.y}\n          style=\"overflow:visible\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"transparent\" onMousedown={this.dragElement} />\n          <g stroke=\"#000\" stroke-width=\"1\" fill=\"#fff\">\n            <line x1=\"50%\" x2=\"50%\" y1=\"0\" y2={this.staticValue.negativeThirty} stroke-dasharray={this.staticValue.two} />\n            <circle class=\"cursor-rotate\"      onMousedown={this.dragRotateHandle}       cx=\"50%\" cy={this.staticValue.negativeThirty} r={this.staticValue.four} fill=\"#16ea00\" />\n            <circle style=\"cursor:nwse-resize\" onMousedown={this.dragTopLeftHandle}      title=\"top-left\"      cx=\"0\"    r={this.staticValue.four} cy=\"0\"    />\n            <circle style=\"cursor:ns-resize\"   onMousedown={this.dragTopMiddleHandle}    title=\"top-middle\"    cx=\"50%\"  r={this.staticValue.four} cy=\"0\"    />\n            <circle style=\"cursor:nesw-resize\" onMousedown={this.dragTopRightHandle}     title=\"top-right\"     cx=\"100%\" r={this.staticValue.four} cy=\"0\"    />\n            <circle style=\"cursor:nesw-resize\" onMousedown={this.dragBottomLeftHandle}   title=\"bottom-left\"   cx=\"0\"    r={this.staticValue.four} cy=\"100%\" />\n            <circle style=\"cursor:ns-resize\"   onMousedown={this.dragBottomMiddleHandle} title=\"bottom-middle\" cx=\"50%\"  r={this.staticValue.four} cy=\"100%\" />\n            <circle style=\"cursor:nwse-resize\" onMousedown={this.dragBottomRightHandle}  title=\"bottom-right\"  cx=\"100%\" r={this.staticValue.four} cy=\"100%\" />\n            <circle style=\"cursor:ew-resize\"   onMousedown={this.dragMiddleLeftHandle}   title=\"middle-left\"   cx=\"0%\"   r={this.staticValue.four} cy=\"50%\"  />\n            <circle style=\"cursor:ew-resize\"   onMousedown={this.dragMiddleRightHandle}  title=\"middle-right\"  cx=\"100%\" r={this.staticValue.four} cy=\"50%\"  />\n          </g>\n        </svg>\n      </g>\n    ) \n  },\n  methods: {\n    ...handleMethods\n  }\n}\n\nexport default ResizeHandler\n\n\n// WEBPACK FOOTER //\n// ./src/components/resize-handler.js","import Common from '@/common'\nimport Utils from '@/utils'\nimport ResizeHandler from './resize-handler'\n\n// 吸附阈值\nconst DISTANCE_THRESHOLD = 8\n\nconst RectList = [\n  {x: 124, y: 125, width: 100, height: 100, rotate: 0},\n  {x: 723, y: 265, width: 200, height: 130, rotate: 0},\n  {x: 482, y: 422, width: 130, height: 200, rotate: 0},\n  {x: 208, y: 402, width: 231, height: 503, rotate: 0}\n]\n\n// 重置参考物的线框尺寸\nconst resetReferenceShape = () => [\n  {x: 0, y: 0, width: 0, height: 0},\n  {x: 0, y: 0, width: 0, height: 0}\n]\n\nexport default {\n  name: 'svg-canvas',\n  data() {\n    const ID_TEMPLATE = +new Date()\n\n    const shapeList = RectList.map((rect, i) => {\n      return {\n        id: String(ID_TEMPLATE + i),\n        ...rect\n      }\n    })\n\n    return {\n      shapeList,\n\n      dragingShapeId: null, // 拖拽中的图形\n      measuringLine: [ // 吸附参考线\n        [[0, 0], [0, 0]],\n        [[0, 0], [0, 0]]\n      ],\n      referenceShape: resetReferenceShape(), // 参考物线框\n      corrected: { // 修正值\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }\n    }\n  },\n  render(h) {\n    return (\n      <svg viewBox=\"0 0 1000 1000\" width=\"800\" height=\"800\" ref=\"svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"none\" stroke=\"#000\" x=\"0\" y=\"0\" />\n        {\n          this.shapeList.map((shape, i) => {\n            const correctedProps = shape.id === this.dragingShapeId ? {\n              corrected: this.corrected\n            } : {}\n\n            if (shape.id === this.dragingShapeId) {\n              return (\n                <ResizeHandler\n                  key={shape.id}\n                  id={shape.id}\n                  size={shape}\n                  getViewportRef={this.getViewportRef}\n                  onChanging={this.handleChangingShape}\n                  onChanged={this.handleChangedShape}\n                  scaling={100}\n                  corrected={this.corrected}\n                />\n              )\n            }\n\n            return (\n              <ResizeHandler\n                key={shape.id}\n                id={shape.id}\n                size={shape}\n                getViewportRef={this.getViewportRef}\n                onChanging={this.handleChangingShape}\n                onChanged={this.handleChangedShape}\n                scaling={100}\n              />\n            )\n          })\n        }\n        <line\n          x1={this.measuringLine[0][0][0]}\n          y1={this.measuringLine[0][0][1]}\n          x2={this.measuringLine[0][1][0]}\n          y2={this.measuringLine[0][1][1]}\n          stroke=\"#f00\"\n          stroke-width=\"2\"\n        />\n        <line\n          x1={this.measuringLine[1][0][0]}\n          y1={this.measuringLine[1][0][1]}\n          x2={this.measuringLine[1][1][0]}\n          y2={this.measuringLine[1][1][1]}\n          stroke=\"#f00\"\n          stroke-width=\"2\"\n        />\n        <g stroke=\"#f00\" stroke-width=\"2\" fill=\"none\">\n          <rect\n            x={this.referenceShape[0].x}\n            y={this.referenceShape[0].y}\n            width={this.referenceShape[0].width}\n            height={this.referenceShape[0].height}\n          />\n          <rect\n            x={this.referenceShape[1].x}\n            y={this.referenceShape[1].y}\n            width={this.referenceShape[1].width}\n            height={this.referenceShape[1].height}\n          />\n        </g>\n      </svg>\n    )\n  },\n  methods: {\n    getViewportRef() {\n      return this.$refs.svg\n    },\n\n    /**\n     * 形状处于变化时的回调（用于计算吸附校正）\n     * \n     * @param {String} shapeId          形状编号\n     * @param {String} handler          触发变化的手柄，有10种值：\n     *                                    move (位移), rotate (旋转),\n     *                                    top-left (左上), top-middle (中上), top-right (右上),\n     *                                    bottom-left (左下), bottom-middle (中下), bottom-right (右下),\n     *                                    middle-left (中左), meddle-right (中右)\n     * @param {Array}  currentSize      实时尺寸大小\n     * @param {Object} handlerPosition  手柄坐标\n     * @param {Object} mousePosition    鼠标坐标（当锁定比例时，鼠标坐标不等于手柄坐标）\n     */\n    handleChangingShape(shapeId, handler, currentSize, handlerPosition, mousePosition) {\n      if (currentSize.rotate > 0) {\n        return\n      }\n\n      const dragingShapePoints = Common.sizeToPoints(currentSize)\n      const measuringLineX = [[0, 0], [0, 0]]\n      const measuringLineY = [[0, 0], [0, 0]]\n      const referenceShape = [\n        {x: 0, y: 0, width: 0, height: 0},\n        {x: 0, y: 0, width: 0, height: 0}\n      ]\n\n      // 拖拽中的元素与参考元素的x轴关系值\n      let closestX = {\n        points: null,       // 参考对象的关键点集合\n        distance: Infinity, // 与参考对象的x轴关键点的差值绝对值的最小值\n        pointIndex: 0,      // 参考的关键点索引 0: xMin, 1: xMid, 2: xMax\n        correct: 0          // x轴修正值\n      }\n\n      let closestY = {\n        points: null,\n        distance: Infinity,\n        pointIndex: 0,\n        correct: 0\n      }\n\n      const getClosestXFunc = shapePoints => diff => {\n        const distance = Math.abs(diff[0])\n        if (distance < closestX.distance && (distance < DISTANCE_THRESHOLD)) {\n          closestX = {\n            distance,\n            pointIndex: diff[1],\n            points: shapePoints,\n            correct: diff[0]\n          }\n        }\n      }\n\n      const getClosestYFunc = shapePoints => diff => {\n        const distance = Math.abs(diff[0])\n        if (distance < closestY.distance && (distance < DISTANCE_THRESHOLD)) {\n          closestY = {\n            distance,\n            pointIndex: diff[1],\n            points: shapePoints,\n            correct: diff[0]\n          }\n        }\n      }\n\n      if (handler === 'move') {\n        this.shapeList.forEach(shape => {\n          if (shape.id === shapeId || (shape.rotate > 0)) {\n            return\n          }\n\n          const shapePoints = Common.sizeToPoints(shape)\n\n          const pointXDiff = [\n            [shapePoints[0][0] - dragingShapePoints[0][0], 0],\n            [shapePoints[0][0] - dragingShapePoints[0][1], 0],\n            [shapePoints[0][0] - dragingShapePoints[0][2], 0],\n            [shapePoints[0][1] - dragingShapePoints[0][0], 1],\n            [shapePoints[0][1] - dragingShapePoints[0][1], 1],\n            [shapePoints[0][1] - dragingShapePoints[0][2], 1],\n            [shapePoints[0][2] - dragingShapePoints[0][0], 2],\n            [shapePoints[0][2] - dragingShapePoints[0][1], 2],\n            [shapePoints[0][2] - dragingShapePoints[0][2], 2]\n          ]\n\n          const pointYDiff = [\n            [shapePoints[1][0] - dragingShapePoints[1][0], 0],\n            [shapePoints[1][0] - dragingShapePoints[1][1], 0],\n            [shapePoints[1][0] - dragingShapePoints[1][2], 0],\n            [shapePoints[1][1] - dragingShapePoints[1][0], 1],\n            [shapePoints[1][1] - dragingShapePoints[1][1], 1],\n            [shapePoints[1][1] - dragingShapePoints[1][2], 1],\n            [shapePoints[1][2] - dragingShapePoints[1][0], 2],\n            [shapePoints[1][2] - dragingShapePoints[1][1], 2],\n            [shapePoints[1][2] - dragingShapePoints[1][2], 2]\n          ]\n\n          const getClosestX = getClosestXFunc(shapePoints)\n          const getClosestY = getClosestYFunc(shapePoints)\n\n          pointXDiff.forEach(getClosestX)\n          pointYDiff.forEach(getClosestY)\n        })\n      } else if (handler !== 'rotate') {\n        this.shapeList.forEach(shape => {\n          if (shape.id === shapeId || (shape.rotate > 0)) {\n            return\n          }\n\n          const shapePoints = Common.sizeToPoints(shape)\n\n          const pointXDiff = [\n            [shapePoints[0][0] - handlerPosition.x, 0],\n            [shapePoints[0][1] - handlerPosition.x, 1],\n            [shapePoints[0][2] - handlerPosition.x, 2]\n          ]\n\n          const pointYDiff = [\n            [shapePoints[1][0] - handlerPosition.y, 0],\n            [shapePoints[1][1] - handlerPosition.y, 1],\n            [shapePoints[1][2] - handlerPosition.y, 2]\n          ]\n\n          const getClosestX = getClosestXFunc(shapePoints)\n          const getClosestY = getClosestYFunc(shapePoints)\n\n          pointXDiff.forEach(getClosestX)\n          pointYDiff.forEach(getClosestY)\n        })\n      }\n\n      if (closestX.points !== null) {\n        if (closestX.pointIndex == 0) {\n          measuringLineX[0][0] = closestX.points[0][0]\n          measuringLineX[1][0] = closestX.points[0][0]\n        } else if (closestX.pointIndex === 1) {\n          measuringLineX[0][0] = closestX.points[0][1]\n          measuringLineX[1][0] = closestX.points[0][1]\n        } else { // closestX.pointIndex === 2\n          measuringLineX[0][0] = closestX.points[0][2]\n          measuringLineX[1][0] = closestX.points[0][2]\n        }\n\n        if (closestX.points[1][0] > dragingShapePoints[1][0]) {\n          measuringLineX[0][1] = dragingShapePoints[1][0] + closestY.correct\n          measuringLineX[1][1] = closestX.points[1][2]\n        } else {\n          measuringLineX[0][1] = closestX.points[1][0]\n          measuringLineX[1][1] = dragingShapePoints[1][2] + closestY.correct\n        }\n\n        referenceShape[0] = Common.pointsToSize(closestX.points)\n      }\n\n      if (closestY.points !== null) {\n        if (closestY.pointIndex == 0) {\n          measuringLineY[0][1] = closestY.points[1][0]\n          measuringLineY[1][1] = closestY.points[1][0]\n        } else if (closestY.pointIndex === 1) {\n          measuringLineY[0][1] = closestY.points[1][1]\n          measuringLineY[1][1] = closestY.points[1][1]\n        } else { // closestY.pointIndex === 2\n          measuringLineY[0][1] = closestY.points[1][2]\n          measuringLineY[1][1] = closestY.points[1][2]\n        }\n\n        if (closestY.points[0][0] > dragingShapePoints[0][0]) {\n          measuringLineY[0][0] = dragingShapePoints[0][0] + closestX.correct\n          measuringLineY[1][0] = closestY.points[0][2]\n        } else {\n          measuringLineY[0][0] = closestY.points[0][0]\n          measuringLineY[1][0] = dragingShapePoints[0][2] + closestX.correct\n        }\n\n        referenceShape[1] = Common.pointsToSize(closestY.points)\n      }\n\n      this.measuringLine = [\n        measuringLineX,\n        measuringLineY\n      ]\n\n      this.dragingShapeId = shapeId\n      this.referenceShape = referenceShape\n\n      switch(handler) {\n        case 'move':\n          this.corrected.x = closestX.correct\n          this.corrected.y = closestY.correct\n          break\n        case 'top-left':\n          this.corrected.x = closestX.correct\n          this.corrected.y = closestY.correct\n          this.corrected.width = closestX.correct * -1\n          this.corrected.height = closestY.correct * -1\n          break\n        case 'top-middle':\n          this.corrected.y = closestY.correct\n          this.corrected.height = closestY.correct * -1\n          break\n        case 'top-right':\n          this.corrected.y = closestY.correct\n          this.corrected.width = closestX.correct\n          this.corrected.height = closestY.correct * -1\n          break\n        case 'bottom-left':\n          this.corrected.x = closestX.correct\n          this.corrected.width = closestX.correct * -1\n          this.corrected.height = closestY.correct\n          break\n        case 'bottom-middle':\n          this.corrected.height = closestY.correct\n          break\n        case 'bottom-right':\n          this.corrected.width = closestX.correct\n          this.corrected.height = closestY.correct\n          break\n        case 'middle-left':\n          this.corrected.x = closestX.correct\n          this.corrected.width = closestX.correct * -1\n          break\n        case 'middle-right':\n          this.corrected.width = closestX.correct\n          break\n      }\n    },\n\n    handleChangedShape(shapeId, size) {\n      this.shapeList.some(shape => {\n        if (shape.id === shapeId) {\n          Object.assign(shape, size)\n          return true\n        }\n      })\n\n      this.dragingShapeId = null\n      this.resetCorrectedValue()\n      this.referenceShape = resetReferenceShape()\n    },\n\n    // 重制修正值\n    resetCorrectedValue() {\n      this.measuringLine = [\n        [[0, 0], [0, 0]],\n        [[0, 0], [0, 0]]\n      ]\n      this.corrected = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/svg-canvas.js","import SvgCanvas from './components/svg-canvas'\n\nexport default {\n  name: 'app',\n  render: h => h(SvgCanvas)\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","import Vue from 'vue'\nimport App from './app'\n\nVue.config.productionTip = false\n\nVue.mixin({\n  computed: {\n    workspace() {\n      return {\n        lockProportions: false // 启用锁定长宽比\n      }\n    }\n  }\n})\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}